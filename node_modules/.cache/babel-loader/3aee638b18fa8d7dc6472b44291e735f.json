{"ast":null,"code":"var _jsxFileName = \"/Users/ava/Downloads/build-a-formik-form_starter/src/App.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import { useFormik } from \"formik\";\n\n// function App() {\n//   const formik = useFormik({\n//     initialValues: {\n//       email: \"\",\n//       password: \"\",\n//     },\n//     onSubmit: (values) => {\n//       alert(\"Login Successful\");\n//     },\n//     validate: (values) => {\n//       let errors = {};\n//       if (!values.email) {\n//         errors.email = \"field required\";\n//       } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n//         errors.email = \"Username should be an email\";\n//       }\n//       if (!values.password) errors.password = \"field required\";\n//       return errors;\n//     },\n//   });\n\n//   return (\n//     <div>\n//       <form onSubmit={formik.handleSubmit}>\n//         <div>Email:</div>\n//         <input\n//           id=\"emailField\"\n//           type=\"text\"\n//           name=\"email\"\n//           onChange={formik.handleChange}\n//           value={formik.values.email}\n//         />\n//         {formik.errors.email ? (\n//           <div id=\"emailError\" style={{ color: \"red\" }}>\n//             {formik.errors.email}\n//           </div>\n//         ) : null}\n//         <div>Password:</div>\n//         <input\n//           id=\"pswField\"\n//           type=\"text\"\n//           name=\"password\"\n//           onChange={formik.handleChange}\n//           value={formik.values.password}\n//         />\n//         <br />\n//         {formik.errors.password ? (\n//           <div id=\"pswError\" style={{ color: \"red\" }}>\n//             {formik.errors.password}\n//           </div>\n//         ) : null}\n//         <button id=\"submitBtn\" type=\"submit\">\n//           Submit\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: values => {\n      alert(\"Login Successful\");\n    },\n    validate: values => {\n      let errors = {};\n      if (!values.email) {\n        errors.email = \"Field required\";\n      } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n        errors.email = \"Username should be an email\";\n      }\n      if (!values.password) errors.password = \"Field required\";\n      return errors;\n    }\n  });\n\n  // Styles\n  const formStyle = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"300px\",\n    margin: \"0 auto\",\n    padding: \"20px\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"8px\",\n    backgroundColor: \"#f9f9f9\"\n  };\n  const inputStyle = {\n    marginBottom: \"10px\",\n    padding: \"8px\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"4px\"\n  };\n  const errorStyle = {\n    color: \"red\",\n    marginBottom: \"10px\"\n  };\n  const buttonStyle = {\n    padding: \"10px 20px\",\n    border: \"none\",\n    borderRadius: \"5px\",\n    backgroundColor: \"#72b7cc\",\n    color: \"white\",\n    cursor: \"pointer\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      style: formStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"emailField\",\n        style: {\n          marginBottom: \"5px\"\n        },\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"emailField\",\n        type: \"text\",\n        name: \"email\",\n        onChange: formik.handleChange,\n        value: formik.values.email,\n        style: inputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), formik.errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"emailError\",\n        style: errorStyle,\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"pswField\",\n        style: {\n          marginBottom: \"5px\"\n        },\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"pswField\",\n        type: \"password\" // Changed to type password for privacy\n        ,\n        name: \"password\",\n        onChange: formik.handleChange,\n        value: formik.values.password,\n        style: inputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), formik.errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"pswError\",\n        style: errorStyle,\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"submitBtn\",\n        type: \"submit\",\n        style: buttonStyle,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useFormik","jsxDEV","_jsxDEV","App","_s","formik","initialValues","email","password","onSubmit","values","alert","validate","errors","test","formStyle","display","flexDirection","width","margin","padding","border","borderRadius","backgroundColor","inputStyle","marginBottom","errorStyle","color","buttonStyle","cursor","children","handleSubmit","style","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","name","onChange","handleChange","value","_c","$RefreshReg$"],"sources":["/Users/ava/Downloads/build-a-formik-form_starter/src/App.js"],"sourcesContent":["// import React from \"react\";\n// import { useFormik } from \"formik\";\n\n// function App() {\n//   const formik = useFormik({\n//     initialValues: {\n//       email: \"\",\n//       password: \"\",\n//     },\n//     onSubmit: (values) => {\n//       alert(\"Login Successful\");\n//     },\n//     validate: (values) => {\n//       let errors = {};\n//       if (!values.email) {\n//         errors.email = \"field required\";\n//       } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n//         errors.email = \"Username should be an email\";\n//       }\n//       if (!values.password) errors.password = \"field required\";\n//       return errors;\n//     },\n//   });\n\n//   return (\n//     <div>\n//       <form onSubmit={formik.handleSubmit}>\n//         <div>Email:</div>\n//         <input\n//           id=\"emailField\"\n//           type=\"text\"\n//           name=\"email\"\n//           onChange={formik.handleChange}\n//           value={formik.values.email}\n//         />\n//         {formik.errors.email ? (\n//           <div id=\"emailError\" style={{ color: \"red\" }}>\n//             {formik.errors.email}\n//           </div>\n//         ) : null}\n//         <div>Password:</div>\n//         <input\n//           id=\"pswField\"\n//           type=\"text\"\n//           name=\"password\"\n//           onChange={formik.handleChange}\n//           value={formik.values.password}\n//         />\n//         <br />\n//         {formik.errors.password ? (\n//           <div id=\"pswError\" style={{ color: \"red\" }}>\n//             {formik.errors.password}\n//           </div>\n//         ) : null}\n//         <button id=\"submitBtn\" type=\"submit\">\n//           Submit\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React from \"react\";\nimport { useFormik } from \"formik\";\n\nfunction App() {\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    onSubmit: (values) => {\n      alert(\"Login Successful\");\n    },\n    validate: (values) => {\n      let errors = {};\n      if (!values.email) {\n        errors.email = \"Field required\";\n      } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n        errors.email = \"Username should be an email\";\n      }\n      if (!values.password) errors.password = \"Field required\";\n      return errors;\n    },\n  });\n\n  // Styles\n  const formStyle = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"300px\",\n    margin: \"0 auto\",\n    padding: \"20px\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"8px\",\n    backgroundColor: \"#f9f9f9\",\n  };\n\n  const inputStyle = {\n    marginBottom: \"10px\",\n    padding: \"8px\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"4px\",\n  };\n\n  const errorStyle = {\n    color: \"red\",\n    marginBottom: \"10px\",\n  };\n\n  const buttonStyle = {\n    padding: \"10px 20px\",\n    border: \"none\",\n    borderRadius: \"5px\",\n    backgroundColor: \"#72b7cc\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit} style={formStyle}>\n        <label htmlFor=\"emailField\" style={{ marginBottom: \"5px\" }}>Email:</label>\n        <input\n          id=\"emailField\"\n          type=\"text\"\n          name=\"email\"\n          onChange={formik.handleChange}\n          value={formik.values.email}\n          style={inputStyle}\n        />\n        {formik.errors.email && <div id=\"emailError\" style={errorStyle}>{formik.errors.email}</div>}\n\n        <label htmlFor=\"pswField\" style={{ marginBottom: \"5px\" }}>Password:</label>\n        <input\n          id=\"pswField\"\n          type=\"password\" // Changed to type password for privacy\n          name=\"password\"\n          onChange={formik.handleChange}\n          value={formik.values.password}\n          style={inputStyle}\n        />\n        {formik.errors.password && <div id=\"pswError\" style={errorStyle}>{formik.errors.password}</div>}\n\n        <button id=\"submitBtn\" type=\"submit\" style={buttonStyle}>\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,MAAM,GAAGL,SAAS,CAAC;IACvBM,aAAa,EAAE;MACbC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC;IACDC,QAAQ,EAAGC,MAAM,IAAK;MACpBC,KAAK,CAAC,kBAAkB,CAAC;IAC3B,CAAC;IACDC,QAAQ,EAAGF,MAAM,IAAK;MACpB,IAAIG,MAAM,GAAG,CAAC,CAAC;MACf,IAAI,CAACH,MAAM,CAACH,KAAK,EAAE;QACjBM,MAAM,CAACN,KAAK,GAAG,gBAAgB;MACjC,CAAC,MAAM,IAAI,CAAC,cAAc,CAACO,IAAI,CAACJ,MAAM,CAACH,KAAK,CAAC,EAAE;QAC7CM,MAAM,CAACN,KAAK,GAAG,6BAA6B;MAC9C;MACA,IAAI,CAACG,MAAM,CAACF,QAAQ,EAAEK,MAAM,CAACL,QAAQ,GAAG,gBAAgB;MACxD,OAAOK,MAAM;IACf;EACF,CAAC,CAAC;;EAEF;EACA,MAAME,SAAS,GAAG;IAChBC,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE,MAAM;IACfC,MAAM,EAAE,gBAAgB;IACxBC,YAAY,EAAE,KAAK;IACnBC,eAAe,EAAE;EACnB,CAAC;EAED,MAAMC,UAAU,GAAG;IACjBC,YAAY,EAAE,MAAM;IACpBL,OAAO,EAAE,KAAK;IACdC,MAAM,EAAE,gBAAgB;IACxBC,YAAY,EAAE;EAChB,CAAC;EAED,MAAMI,UAAU,GAAG;IACjBC,KAAK,EAAE,KAAK;IACZF,YAAY,EAAE;EAChB,CAAC;EAED,MAAMG,WAAW,GAAG;IAClBR,OAAO,EAAE,WAAW;IACpBC,MAAM,EAAE,MAAM;IACdC,YAAY,EAAE,KAAK;IACnBC,eAAe,EAAE,SAAS;IAC1BI,KAAK,EAAE,OAAO;IACdE,MAAM,EAAE;EACV,CAAC;EAED,oBACE3B,OAAA;IAAA4B,QAAA,eACE5B,OAAA;MAAMO,QAAQ,EAAEJ,MAAM,CAAC0B,YAAa;MAACC,KAAK,EAAEjB,SAAU;MAAAe,QAAA,gBACpD5B,OAAA;QAAO+B,OAAO,EAAC,YAAY;QAACD,KAAK,EAAE;UAAEP,YAAY,EAAE;QAAM,CAAE;QAAAK,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1EnC,OAAA;QACEoC,EAAE,EAAC,YAAY;QACfC,IAAI,EAAC,MAAM;QACXC,IAAI,EAAC,OAAO;QACZC,QAAQ,EAAEpC,MAAM,CAACqC,YAAa;QAC9BC,KAAK,EAAEtC,MAAM,CAACK,MAAM,CAACH,KAAM;QAC3ByB,KAAK,EAAER;MAAW;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,EACDhC,MAAM,CAACQ,MAAM,CAACN,KAAK,iBAAIL,OAAA;QAAKoC,EAAE,EAAC,YAAY;QAACN,KAAK,EAAEN,UAAW;QAAAI,QAAA,EAAEzB,MAAM,CAACQ,MAAM,CAACN;MAAK;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAE3FnC,OAAA;QAAO+B,OAAO,EAAC,UAAU;QAACD,KAAK,EAAE;UAAEP,YAAY,EAAE;QAAM,CAAE;QAAAK,QAAA,EAAC;MAAS;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3EnC,OAAA;QACEoC,EAAE,EAAC,UAAU;QACbC,IAAI,EAAC,UAAU,CAAC;QAAA;QAChBC,IAAI,EAAC,UAAU;QACfC,QAAQ,EAAEpC,MAAM,CAACqC,YAAa;QAC9BC,KAAK,EAAEtC,MAAM,CAACK,MAAM,CAACF,QAAS;QAC9BwB,KAAK,EAAER;MAAW;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,EACDhC,MAAM,CAACQ,MAAM,CAACL,QAAQ,iBAAIN,OAAA;QAAKoC,EAAE,EAAC,UAAU;QAACN,KAAK,EAAEN,UAAW;QAAAI,QAAA,EAAEzB,MAAM,CAACQ,MAAM,CAACL;MAAQ;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAE/FnC,OAAA;QAAQoC,EAAE,EAAC,WAAW;QAACC,IAAI,EAAC,QAAQ;QAACP,KAAK,EAAEJ,WAAY;QAAAE,QAAA,EAAC;MAEzD;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACjC,EAAA,CArFQD,GAAG;EAAA,QACKH,SAAS;AAAA;AAAA4C,EAAA,GADjBzC,GAAG;AAuFZ,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}